initQueries:
  - |
    CREATE TABLE IF NOT EXISTS query_execution (
      db_query_id INTEGER NOT NULL,
      db_transaction_id INTEGER NOT NULL,
      query_id INTEGER,
      database varchar(100),
      db_id varchar(20),
      authenticatedUser varchar(100),
      executedUser varchar(100),
      elapsedTimeMs INTEGER,
      pageFaults INTEGER,
      pageHits INTEGER,
      planning INTEGER,
      waiting INTEGER,
      start_timeStamp DATETIME,
      end_timeStamp DATETIME,
      allocatedBytes INTEGER,
      client varchar(200),
      server varchar(200),
      server_hostname varchar(200),
      failed INTEGER,
      stacktrace varchar(4000),
      lang_driver varchar(100),
      driver_version varchar(100),
      query_type INTEGER,
      PRIMARY KEY(db_query_id,db_transaction_id, server),
      FOREIGN KEY (query_id) REFERENCES queries (id)
        ON DELETE CASCADE ON UPDATE NO ACTION
    )
  - |
    CREATE TABLE IF NOT EXISTS queries (
      id INTEGER PRIMARY KEY,
      query varchar(8000) NOT NULL,
      runtime varchar(20) ,
      write_query INTEGER,
      UNIQUE(query,runtime)
    )
  - |
    CREATE INDEX IF NOT EXISTS idx_queries_query 
    ON queries (query)

addStartRecord: |
    INSERT INTO query_execution(db_query_id, db_transaction_id, query_id, database, 
        db_id, authenticatedUser, executedUser, elapsedTimeMs, pageFaults, 
        pageHits, planning, allocatedBytes, client, server, start_timeStamp, failed, stacktrace, lang_driver, driver_version, query_type, server_hostname, waiting)
    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
    ON CONFLICT(db_query_id, db_transaction_id, server) DO UPDATE SET planning=excluded.planning;

addEndRecord: |
  INSERT INTO query_execution(db_query_id, db_transaction_id, query_id, database, 
      db_id, authenticatedUser, executedUser, elapsedTimeMs, pageFaults, 
      pageHits, planning, allocatedBytes, client, server, start_timeStamp, end_timeStamp, failed, stacktrace, lang_driver, driver_version, query_type, server_hostname, waiting)
  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
  ON CONFLICT(db_query_id, db_transaction_id, server) DO UPDATE 
    SET end_timeStamp=excluded.end_timeStamp, 
        query_id=excluded.query_id, 
        elapsedTimeMs=excluded.elapsedTimeMs,
        pageFaults=excluded.pageFaults,
        pageHits=excluded.pageHits
  ;

getQueryId:
  SELECT id, runtime from queries WHERE query= ?

updateQueryRuntime:
  UPDATE queries set runtime=? WHERE id= ?

insertQuery:
  INSERT INTO queries (query, runtime, write_query) VALUES (?, ?, ?)