logType: aura
storeType: sqlite
#queryLocation: "/Users/ravianthapu/Library/Application Support/com.Neo4j.Relate/Data/dbmss/dbms-9dca5dca-4740-4f79-aff4-1e211aa333f9/logs/test/"
queryLocation: "/Users/ravianthapu/Downloads/testlog/"
databaseURI: jdbc:sqlite:query_db.db
initQueries:
  - |
    CREATE TABLE IF NOT EXISTS query_execution (
      db_query_id INTEGER NOT NULL,
      db_transaction_id INTEGER NOT NULL,
      query_id INTEGER,
      database varchar(100),
      db_id varchar(20),
      authenticatedUser varchar(100),
      executedUser varchar(100),
      elapsedTimeMs INTEGER,
      pageFaults INTEGER,
      pageHits INTEGER,
      planning INTEGER,
      waiting INTEGER,
      start_timeStamp DATETIME,
      end_timeStamp DATETIME,
      allocatedBytes INTEGER,
      client varchar(200),
      server varchar(200),
      PRIMARY KEY(db_query_id,db_transaction_id),
      FOREIGN KEY (query_id) REFERENCES queries (id)
        ON DELETE CASCADE ON UPDATE NO ACTION
    )
  - |
    CREATE TABLE IF NOT EXISTS queries (
      id INTEGER PRIMARY KEY,
      query varchar(4000) NOT NULL,
      runtime varchar(20) NOT NULL,
      UNIQUE(query,runtime)
    )

addStartRecord: |
    INSERT INTO query_execution(db_query_id, db_transaction_id, query_id, database, 
        db_id, authenticatedUser, executedUser, elapsedTimeMs, pageFaults, 
        pageHits, planning, allocatedBytes, client, server, start_timeStamp)
    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
    ON CONFLICT(db_query_id, db_transaction_id) DO UPDATE SET start_timeStamp=excluded.start_timeStamp,planning=excluded.planning;

addEndRecord: |
  INSERT INTO query_execution(db_query_id, db_transaction_id, query_id, database, 
      db_id, authenticatedUser, executedUser, elapsedTimeMs, pageFaults, 
      pageFaults, pageHits, allocatedBytes, client, server, end_timeStamp )
  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
  ON CONFLICT(db_query_id, db_transaction_id) DO UPDATE SET end_timeStamp=excluded.end_timeStamp;

getQueryId:
  SELECT id from queries WHERE query= ? AND runtime = ?

insertQuery:
  INSERT INTO queries (query, runtime) VALUES (?, ?)